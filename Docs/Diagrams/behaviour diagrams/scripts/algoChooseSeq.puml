@startuml
actor User as u
participant DataAccessController as DAC
participant ExperimentBuilder as EB

activate u
activate Service
activate ExperimentConfigurationPresenter
activate DAC
activate EB


ExperimentConfigurationPresenter -> ExperimentConfigurationPresenter : [displays the available algorithms in the list builder element]
u -> ExperimentConfigurationPresenter : [clicks "Start Experiment"]
note left
    user selected the desired
    algorithms in the list
    builder GUI element
    and inserted number of
    iterations
end note

alt user selected at least one algorithm and inserted valid # of iterations
    ExperimentConfigurationPresenter -> Service : setAlgorithmsToExperiment(List<String> algorithmNames, int iterationNumber)

    Service -> DAC : getAlgorithms(List<algorithmNames: String>)

    DAC -> AlgorithmLoader : loadAlgorithm(List<algorithmNames: String>)

    AlgorithmLoader --> DAC : [List<SmartHomeAgentBehaviour>]

    DAC --> Service : [List<SmartHomeAgentBehaviour>]
    Service -> EB : setAlgorithms(List<SmartHomeAgentBehaviour>)
    Service -> EB : setNumOfIterations(int)
    ref over Service : Choosing Problems UseCase

    Service --> ExperimentConfigurationPresenter

    ref over ExperimentConfigurationPresenter : Run Experiment UseCase
else # of iteration field input is not a number / input <= 0 / empty
    ExperimentConfigurationPresenter --> u : [shows a validation error message]

else no algorithms were selected
    ExperimentConfigurationPresenter --> u : [shows a validation error message]

end
@enduml